Python Library Documentation: package simplepbi.admin in simplepbi

NAME
    simplepbi.admin

DESCRIPTION
    /¯¯¯¯¯¯¯¯¯ /           |   |   __    |  *********************************************
    |   |  |  \   |  Code writen by Ignacio and Martin.
    |   |  |  |   |
    |   |__|_ |   |  La Data Web 
    |      |__/   |  *********************************************
     \            /
      \__________/

PACKAGE CONTENTS


CLASSES
    builtins.object
        Admin
    
    class Admin(builtins.object)
     |  Admin(token)
     |  
     |  Simple library to use the Power BI api and obtain datasets from it.
     |  
     |  Methods defined here:
     |  
     |  __init__(self, token)
     |      Create a simplePBI object to request admin API
     |      Args:
     |          token: String
     |              Bearer Token to use the Power Bi Rest API
     |  
     |  add_encryption_key_preview(self, activate, isDefault, keyVaultKeyIdentifier, name)
     |      Adds an encryption key for Power BI workspaces assigned to a capacity.
     |      *** THIS REQUEST IS IN PREVIEW IN SIMPLEPBI ***
     |      ### Parameters
     |      ----
     |      ### Request Body
     |      ----
     |      All the keys are requested for the body
     |      activate: bool
     |          Indicates to activate any inactivated capacities to use this key for its encryption.
     |      isDefault: bool
     |          Whether an encryption key is the default key for the entire tenant. Any newly created capacity inherits the default key.
     |      keyVaultKeyIdentifier: str
     |          The URI that uniquely specifies an encryption key in Azure Key Vault.
     |      name:
     |          The name of the encryption key        
     |      ### Returns
     |      ----
     |      Response object from requests library. 200 OK
     |  
     |  add_user_to_group(self, workspace_id, groupUserAccessRight, emailAddress, displayName=None, graphId=None, identifier=None, principalType=None)
     |      Grants user permissions to the specified workspace.
     |      This API call only supports updating workspaces in the new workspace experience and adding a user principle.
     |      ### Parameters
     |      ----
     |      workspace_id:
     |          The Power Bi workspace id. You can take it from PBI Service URL
     |      ### Request Body
     |      ----
     |      groupUserAccessRight: GroupUserAccessRight
     |          Access rights user has for the workspace (Permission level: Admin, Contributor, Member, Viewer or None). This is mandatory
     |      emailAddress: str
     |          Email address of the user. This is mandatory.
     |      displayName: str
     |          Display name of the principal
     |      graphId: str
     |          Identifier of the principal in Microsoft Graph. Only available for admin APIs
     |      identifier: str
     |          Object ID of the principal
     |      principalType: principalType
     |          The principal type (App, Group, User or None)
     |      ### Returns
     |      ----
     |      Response object from requests library. 200 OK
     |  
     |  assign_workspaces_to_capacity_preview(self, tagetCapacityObjectId, workspacesToAssign)
     |      Assigns the specified workspaces to the specified Premium capacity.
     |      *** THIS REQUEST IS IN PREVIEW IN SIMPLEPBI ***
     |      ### Parameters
     |      ----
     |      ### Request Body
     |      ----
     |      capacityMigrationAssignments: Assignment contract for migrating workspaces to premium capacity as tenant admin
     |      
     |      targetCapacityObjectId: str
     |          The premium capacity ID
     |      workspacesToAssign: str[]
     |          List of the workspace IDs to be migrated to premium capacity
     |      ### Returns
     |      ----
     |      Response object from requests library. 200 OK
     |  
     |  delete_user_from_group(self, workspace_id, user)
     |      Removes user permissions from the specified workspace.
     |      This API call only supports updating workspaces in the new workspace experience and adding a user principle.
     |      ### Parameters
     |      ----
     |      workspace_id: str uuid
     |          The Power Bi workspace id. You can take it from PBI Service URL
     |      user: str
     |          The user principal name (UPN) of the user to remove (usually the user's email).
     |      ### Returns
     |      ----
     |      Response object from requests library. 200 OK
     |  
     |  delete_user_from_pipeline(self, pipeline_id, identifier)
     |      Removes user permissions from a specified deployment pipeline.
     |      
     |      ### Parameters
     |      ----
     |      pipeline_id: str uuid
     |          The deployment pipeline ID
     |      identifier: str
     |          For Principal type 'User' provide UPN , otherwise provide Object ID of the principal
     |      ### Returns
     |      ----
     |      Response object from requests library. 200 OK
     |  
     |  export_dataflow(self, dataflow_id)
     |      Exports the definition for the specified dataflow to a JSON file.
     |      ### Parameters
     |      ----
     |      dataflow_id:
     |          The Power Bi Dataflow id. You can take it from PBI Service URL
     |      ### Returns
     |      ----
     |      Dict:
     |          A dictionary containing all the metadata built in the dataflow.
     |  
     |  get_activity_events_preview(self, activity_date=None, return_pandas=False)
     |      Returns a dict of pandas dataframe of audit activity events for a tenant.
     |      *** THIS REQUEST IS IN PREVIEW IN SIMPLEPBI ***
     |      The continuation token is automtaically used to get all the results in the date.
     |      ### Parameters
     |      ----
     |      activity_date: str "yyyy-mm-dd"
     |          The Single date to get events from the whole day.
     |          If the date is not specify it will return yesterday events by default.
     |      return_pandas: bool
     |          Flag to specify if you want to return a dict response or a pandas dataframe of events.
     |      ### Returns
     |      ----
     |      If return_pandas = True returns a Pandas dataframe concatenating iterations otherwise it returns a dict of the response
     |      ### Limitations
     |      ----
     |      Maximum 200 requests per hour.
     |  
     |  get_apps(self, top)
     |      Returns a list of apps for the organization.
     |      ### Parameters
     |      ----
     |      top: int
     |          Returns only the first n results. This parameter is mandatory and must be in the range of 1-5000.
     |      ### Returns
     |      ----
     |      Dict:
     |          A dictionary containing all the apps in the tenant.
     |  
     |  get_apps_users(self, app_id)
     |      Returns a list of users that have access to the specified app (Preview).
     |      ### Parameters
     |      ----
     |      app_id:
     |          The Power Bi app id. You can take it from PBI Service URL
     |      ### Returns
     |      ----
     |      Dict:
     |          A dictionary containing all the users in the app.
     |  
     |  get_available_features(self)
     |      Returns a list of available features for the user.
     |      ### Returns
     |      -------
     |      200 ok. A dict with the features.
     |  
     |  get_capacities(self, expand=None)
     |      Returns a list of capacities for the organization.
     |      ### Parameters
     |      ----
     |      expand: int
     |          Expands related entities inline
     |      ### Returns
     |      ----
     |      Dict:
     |          A dictionary containing all the capacities in the tenant.
     |  
     |  get_capacities_users(self, capacity_id)
     |      Returns a list of users that have access to the specified capacitie (Preview).
     |      ### Parameters
     |      ----
     |      capacity_id:
     |          The Power Bi capacity id. You can take it from PBI Service URL
     |      ### Returns
     |      ----
     |      Dict:
     |          A dictionary containing all the users in the capacity.
     |  
     |  get_dashboard_subscriptions_preview(self, dashboard_id)
     |      Returns a list of subscriptions along with subscribees that the dashboard subscribed to. This is a preview API call.
     |      ### Parameters
     |      ----
     |      dashboard_id: str uui
     |          The dashboard id
     |      ### Returns
     |      ----
     |      Dict:
     |          Returns detailed subscriptions of the dashboard.
     |      ### Limitations
     |      ----
     |      Maximum 200 requests per hour.
     |  
     |  get_dashboards(self, expand=None, filter=None, skip=None, top=None)
     |      Returns a list of dashboards for the organization.
     |      ### Parameters
     |      ----
     |      expand: string
     |          Expands related entities inline, receives a comma-separated list of data types. Supported: users, reports, dashboards, datasets, dataflows, workbooks
     |      filter: string
     |          Filters the results based on a boolean condition
     |      skip: int 
     |          Skips the first n results. Use with top to fetch results beyond the first 5000.
     |      top: int
     |          Returns only the first n results. 
     |      ### Returns
     |      ----
     |      Dict:
     |          A dictionary containing all the dashboards in the tenant.
     |  
     |  get_dashboards_in_group(self, workspace_id, filter=None, skip=None, top=None)
     |      Returns a list of dashboards from the specified workspace.
     |      ### Parameters
     |      ----
     |      workspace_id:
     |          The Power Bi workspace id. You can take it from PBI Service URL
     |      filter: string
     |          Filters the results based on a boolean condition
     |      skip: int 
     |          Skips the first n results. Use with top to fetch results beyond the first 5000.
     |      top: int
     |          Returns only the first n results. This parameter is mandatory and must be in the range of 1-5000.
     |      ### Returns
     |      ----
     |      Dict:
     |          A dictionary containing all the dashboards in the workspace.
     |  
     |  get_dashboards_users(self, dashboard_id)
     |      Returns a list of users that have access to the specified dashboard (Preview).
     |      ### Parameters
     |      ----
     |      dashboard_id:
     |          The Power Bi dashboard id. You can take it from PBI Service URL
     |      ### Returns
     |      ----
     |      Dict:
     |          A dictionary containing all the users in the dashboard.
     |  
     |  get_dataflow_datasources(self, dataflow_id)
     |      Returns a list of datasources for the specified dataflow.
     |      ### Parameters
     |      ----
     |      dataflow_id:
     |          The Power Bi Dataflow id. You can take it from PBI Service URL
     |      ### Returns
     |      ----
     |      Dict:
     |          A dictionary containing all the datasources in the dataflow.
     |  
     |  get_dataflows(self, filter=None, skip=None, top=None)
     |      Returns a list of dataflows for the organization.
     |      ### Parameters
     |      ----
     |      filter: string
     |          Filters the results based on a boolean condition
     |      skip: int 
     |          Skips the first n results. Use with top to fetch results beyond the first 5000.
     |      top: int
     |          Returns only the first n results. This parameter is mandatory and must be in the range of 1-5000.
     |      ### Returns
     |      ----
     |      Dict:
     |          A dictionary containing all the dataflows in the tenant.
     |  
     |  get_dataflows_in_group(self, workspace_id, filter=None, skip=None, top=None)
     |      Returns a list of dataflows from the specified workspace.
     |      ### Parameters
     |      ----
     |      workspace_id:
     |          The Power Bi workspace id. You can take it from PBI Service URL
     |      filter: string
     |          Filters the results based on a boolean condition
     |      skip: int 
     |          Skips the first n results. Use with top to fetch results beyond the first 5000.
     |      top: int
     |          Returns only the first n results. This parameter is mandatory and must be in the range of 1-5000.
     |      ### Returns
     |      ----
     |      Dict:
     |          A dictionary containing all the dataflows in the workspace.
     |  
     |  get_dataflows_users(self, dataflow_id)
     |      Returns a list of users that have access to the specified dataflow (Preview).
     |      ### Parameters
     |      ----
     |      dataflow_id:
     |          The Power Bi dataflow id. You can take it from PBI Service URL
     |      ### Returns
     |      ----
     |      Dict:
     |          A dictionary containing all the users in the dataflow.
     |  
     |  get_dataset_to_dataflows_links_in_group(self, workspace_id)
     |      Returns a list of upstream dataflows for datasets from the specified workspace.
     |      ### Parameters
     |      ----
     |      workspace_id:
     |          The Power Bi workspace id. You can take it from PBI Service URL
     |      ### Returns
     |      ----
     |      Dict:
     |          A dictionary containing all the upstream dataflows in the dataset from a workspace
     |  
     |  get_dataset_users(self, dataset_id)
     |      Returns a list of users that have access to the specified dataset (Preview).
     |      ### Parameters
     |      ----
     |      dataset_id:
     |          The Power Bi Dataset id. You can take it from PBI Service URL
     |      ### Returns
     |      ----
     |      Dict:
     |          A dictionary containing all the users in the dataset.
     |  
     |  get_datasets(self, filter=None, skip=None, top=None)
     |      Returns a list of datasets for the organization..
     |      ### Parameters
     |      ----
     |      filter: string
     |          Filters the results based on a boolean condition
     |      skip: int 
     |          Skips the first n results. Use with top to fetch results beyond the first 5000.
     |      top: int
     |          Returns only the first n results. This parameter is mandatory and must be in the range of 1-5000.
     |      ### Returns
     |      ----
     |      Dict:
     |          A dictionary containing all the datasets in the tenant.
     |  
     |  get_datasets_in_group(self, workspace_id, expand=None, filter=None, skip=None, top=None)
     |      Returns a list of datasets from the specified workspace.
     |      ### Parameters
     |      ----
     |      workspace_id:
     |          The Power Bi workspace id. You can take it from PBI Service URL
     |      expand: string
     |          Expands related entities inline, receives a comma-separated list of data types. Supported: users, reports, dashboards, datasets, dataflows, workbooks
     |      filter: string
     |          Filters the results based on a boolean condition
     |      skip: int 
     |          Skips the first n results. Use with top to fetch results beyond the first 5000.
     |      top: int
     |          Returns only the first n results. This parameter is mandatory and must be in the range of 1-5000.
     |      ### Returns
     |      ----
     |      Dict:
     |          A dictionary containing all the datasets in the workspace.
     |  
     |  get_datasources(self, dataset_id)
     |      Returns a list of datasources for the specified dataset.
     |      ### Parameters
     |      ----
     |      dataset_id:
     |          The Power Bi Dataset id. You can take it from PBI Service URL
     |      ### Returns
     |      ----
     |      Dict:
     |          A dictionary containing all the datasources in the dataset.
     |  
     |  get_encryption_keys(self, expand=None, filter=None, skip=None, top=None)
     |      Returns the encryption keys for the tenant.
     |      ### Parameters
     |      ----
     |      ### Returns
     |      ----
     |      Dict:
     |          A dictionary containing all the refreshables in the tenant.
     |  
     |  get_group(self, group_id, expand=None)
     |      Returns a workspace for the organization.
     |      ### Parameters
     |      ----
     |      group_id: str
     |          The Power Bi Workspace id. You can take it from PBI Service URL
     |      expand: string
     |          Expands related entities inline, receives a comma-separated list of data types. Supported: users, reports, dashboards, datasets, dataflows, workbooks
     |      ### Returns
     |      ----
     |      Dict:
     |          A dictionary containing all the workspaces in the organization.
     |  
     |  get_groups(self, top, expand=None, filter=None, skip=None)
     |      Returns a workspace for the organization.
     |      ### Parameters
     |      ----
     |      top: int
     |          Returns only the first n results. This parameter is mandatory and must be in the range of 1-5000.
     |      expand: string
     |          Expands related entities inline, receives a comma-separated list of data types. Supported: users, reports, dashboards, datasets, dataflows, workbooks
     |      filter: string
     |          Filters the results based on a boolean condition
     |      skip: int 
     |          Skips the first n results. Use with top to fetch results beyond the first 5000.
     |      ### Returns
     |      ----
     |      Dict:
     |          A dictionary containing all the workspaces in the organization.
     |  
     |  get_groups_users(self, group_id)
     |      Returns a list of users that have access to the specified workspace. This is a preview API call.
     |      ### Parameters
     |      ----
     |      group_id: str
     |          The Power Bi Workspace id. You can take it from PBI Service URL.
     |      ### Returns
     |      ----
     |      Dict:
     |          A dictionary containing all the users in the workspace.
     |  
     |  get_imports(self, expand=None, filter=None, skip=None, top=None)
     |      Returns a list of imports for the organization.
     |      ### Parameters
     |      ----
     |      expand: string
     |          Expands related entities inline, receives a comma-separated list of data types. Supported: users, reports, imports, datasets, dataflows, workbooks
     |      filter: string
     |          Filters the results based on a boolean condition
     |      skip: int 
     |          Skips the first n results. Use with top to fetch results beyond the first 5000.
     |      top: int
     |          Returns only the first n results. This parameter is mandatory and must be in the range of 1-5000.
     |      ### Returns
     |      ----
     |      Dict:
     |          A dictionary containing all the imports in the tenant.
     |  
     |  get_modified_workspaces_preview(self, excludePersonalWorkspaces=True, modifiedSince=None)
     |      Gets a list of workspace IDs in the organization. This is a preview API call.
     |      *** THIS REQUEST IS IN PREVIEW IN SIMPLEPBI ***
     |      ### Parameters
     |      ----
     |      excludePersonalWorkspaces: bool
     |          Whether to exclude personal workspaces
     |      modifiedSince: str-datetime
     |          format %Y-%m-%dT%H:%M:00.000Z
     |          
     |      ### Returns
     |      ----
     |      Dict:
     |          Returns a list of list that contains groups of maximum 100 workspaces.
     |  
     |  get_orphan_dataflows_preview(self)
     |      Returns a list of all dataflows that are not used by a dataset.
     |          *** THIS REQUEST IS IN PREVIEW IN SIMPLEPBI ***
     |      ### Limitations
     |      ----
     |      It can only be used for organizations with less than 200 workspaces that contains dataflows. The PBI Rest API won't allow more than 200 requests in an hour.
     |      ### Returns
     |      ----
     |      List:
     |          A list containing all the dataflows without a dataset connected.
     |  
     |  get_pipelines(self, expand=None, filter=None, skip=None, top=None)
     |      Returns a list of pipelines for the organization.
     |      ### Parameters
     |      ----
     |      expand: string
     |          Expands related entities inline, receives a comma-separated list of data types. Supported: users, reports, pipelines, datasets, dataflows, workbooks
     |      filter: string
     |          Filters the results based on a boolean condition
     |      skip: int 
     |          Skips the first n results. Use with top to fetch results beyond the first 5000.
     |      top: int
     |          Returns only the first n results. This parameter is mandatory and must be in the range of 1-5000.
     |      ### Returns
     |      ----
     |      Dict:
     |          A dictionary containing all the pipelines in the tenant.
     |  
     |  get_pipelines_users(self, pipeline_id)
     |      Returns a list of users that have access to the specified pipeline (Preview).
     |      ### Parameters
     |      ----
     |      pipeline_id:
     |          The Power Bi pipeline id. You can take it from PBI Service URL
     |      ### Returns
     |      ----
     |      Dict:
     |          A dictionary containing all the users in the pipeline.
     |  
     |  get_refreshable_capacity(self, capacity_id, refreshable_id, expand=None)
     |      Returns a list of users that have access to the specified capacitie (Preview).
     |      ### Parameters
     |      ----
     |      capacity_id:
     |          The Power Bi capacity id. You can take it from PBI Service URL
     |      refreshable_id
     |          The Power Bi refreshable id in the capacity.
     |      expand: int
     |          Expands related entities inline, receives a comma-separated list of data types. Supported: capacities and groups
     |      ### Returns
     |      ----
     |      Dict:
     |          A dictionary containing all the refreshables in the capacity.
     |  
     |  get_refreshables(self, expand=None, filter=None, skip=None, top=None)
     |      Returns a list of refreshables for the organization.
     |      ### Parameters
     |      ----
     |      top: int
     |          Returns only the first n results. This parameter is mandatory and must be in the range of 1-5000.
     |      expand: string
     |          Expands related entities inline, receives a comma-separated list of data types. Supported: users, reports, refreshables, datasets, dataflows, workbooks
     |      filter: string
     |          Filters the results based on a boolean condition
     |      skip: int 
     |          Skips the first n results. Use with top to fetch results beyond the first 5000.
     |      ### Returns
     |      ----
     |      Dict:
     |          A dictionary containing all the refreshables in the tenant.
     |  
     |  get_refreshables_capacity(self, capacity_id, top, expand=None, filter=None, skip=None)
     |      Returns a list of users that have access to the specified capacitie (Preview).
     |      ### Parameters
     |      ----
     |      capacity_id:
     |          The Power Bi capacitie id. You can take it from PBI Service URL
     |      top: int
     |          Returns only the first n results. This parameter is mandatory and must be in the range of 1-5000.
     |      expand: string
     |          Expands related entities inline, receives a comma-separated list of data types. Supported: users, reports, dashboards, datasets, dataflows, workbooks
     |      filter: string
     |          Filters the results based on a boolean condition
     |      skip: int 
     |          Skips the first n results. Use with top to fetch results beyond the first 5000.
     |      ### Returns
     |      ----
     |      Dict:
     |          A dictionary containing all the users in the capacity.
     |  
     |  get_report_subscriptions_preview(self, report_id)
     |      Returns a list of subscriptions along with subscribees that the report subscribed to. This is a preview API call.
     |      ### Parameters
     |      ----
     |      report_id: str uui
     |          The report id
     |      ### Returns
     |      ----
     |      Dict:
     |          Returns detailed subscriptions of the report.
     |      ### Limitations
     |      ----
     |      Maximum 200 requests per hour.
     |  
     |  get_reports(self, filter=None, skip=None, top=None)
     |      Returns a list of reports for the organization.
     |      ### Parameters
     |      ----
     |      filter: string
     |          Filters the results based on a boolean condition
     |      skip: int 
     |          Skips the first n results. Use with top to fetch results beyond the first 5000.
     |      top: int
     |          Returns only the first n results. This parameter is mandatory and must be in the range of 1-5000.
     |      ### Returns
     |      ----
     |      Dict:
     |          A dictionary containing all the reports in the tenant.
     |  
     |  get_reports_in_group(self, workspace_id, filter=None, skip=None, top=None)
     |      Returns a list of reports from the specified workspace.
     |      ### Parameters
     |      ----
     |      workspace_id:
     |          The Power Bi workspace id. You can take it from PBI Service URL
     |      filter: string
     |          Filters the results based on a boolean condition
     |      skip: int 
     |          Skips the first n results. Use with top to fetch results beyond the first 5000.
     |      top: int
     |          Returns only the first n results. This parameter is mandatory and must be in the range of 1-5000.
     |      ### Returns
     |      ----
     |      Dict:
     |          A dictionary containing all the reports in the workspace.
     |  
     |  get_reports_users(self, report_id)
     |      Returns a list of users that have access to the specified report (Preview).
     |      ### Parameters
     |      ----
     |      report_id:
     |          The Power Bi Report id. You can take it from PBI Service URL
     |      ### Returns
     |      ----
     |      Dict:
     |          A dictionary containing all the users in the report.
     |  
     |  get_scan_result_preview(self, scan_id)
     |      Gets the scan result for the specified scan. This is a preview API call.
     |          *** THIS REQUEST IS IN PREVIEW IN SIMPLEPBI ***
     |      ### Parameters
     |      ----
     |      scan_id: str uui
     |          The scan id obtained from posting workspaces info        
     |      ### Returns
     |      ----
     |      str:
     |          Returns the status of the scan. Succeeded means you are ready to request scans.
     |  
     |  get_scan_status_preview(self, scan_id)
     |      Gets the scan status for the specified scan. This is a preview API call.
     |          *** THIS REQUEST IS IN PREVIEW IN SIMPLEPBI ***
     |      ### Parameters
     |      ----
     |      scan_id: str uui
     |          The scan id obtained from posting workspaces info        
     |      ### Returns
     |      ----
     |      str:
     |          Returns the status of the scan. Succeeded means you are ready to request scans.
     |  
     |  get_tiles(self, dashboard_id)
     |      Returns a list of tiles within the specified dashboard.
     |      ### Parameters
     |      ----
     |      dashboard_id:
     |          The Power Bi dashboard id. You can take it from PBI Service URL
     |      ### Returns
     |      ----
     |      Dict:
     |          A dictionary containing all the tiles in the dashboard.
     |  
     |  get_unused_artifacts(self, workspace_id)
     |      Returns a list of artifacts from the specified workspace with last used date.
     |      ### Parameters
     |      ----
     |      workspace_id:
     |          The Power Bi workspace id. You can take it from PBI Service URL
     |      ### Returns
     |      ----
     |      Dict:
     |          A dictionary containing all the artifacts in the workspace.
     |  
     |  get_upstream_dataflows_in_group(self, workspace_id, dataflow_id)
     |      Returns a list of upstream dataflows for the specified dataflow.
     |      ### Parameters
     |      ----
     |      workspace_id:
     |          The Power Bi workspace id. You can take it from PBI Service URL
     |      dataflow_id:
     |          The Power Bi Dataflow id. You can take it from PBI Service URL
     |      ### Returns
     |      ----
     |      Dict:
     |          A dictionary containing all the dataflows in the workspace.
     |  
     |  get_user_artifact_access_preview(self, userGraphId, return_pandas=False)
     |      Returns a list of artifacts that the given user have access to (Preview).
     |      *** THIS REQUEST IS IN PREVIEW IN SIMPLEPBI ***
     |      
     |      ### Parameters
     |      ----
     |      userGraphId: str uuid
     |          The graph ID of user
     |      return_pandas: bool
     |          Flag to specify if you want to return a dict response or a pandas dataframe of events. By default pandas
     |      ### Returns
     |      ----
     |      If return_pandas = True returns a Pandas dataframe concatenating iterations otherwise it returns a dict of the response
     |      ### Limitations
     |      ----
     |      Maximum 200 requests per hour.
     |  
     |  get_user_subscriptions_preview(self, user_id)
     |      Returns a list of subscriptions that the given user has subscribed to (preview).
     |      ### Parameters
     |      ----
     |      user_id: str uui
     |          The graph ID or UPN of user
     |      ### Returns
     |      ----
     |      Dict:
     |          Returns  detailed subscriptions of the user.
     |      ### Limitations
     |      ----
     |      Maximum 200 requests per hour.
     |  
     |  get_widely_shared_artifacts_links_shared_to_whole_organization(self)
     |      Returns a list of artifacts shared to the whole organization through links.
     |      ### Returns
     |      ----
     |      Dict:
     |          Returns artifacts shared to the whole organization.
     |      ### Limitations
     |      ----
     |      Maximum 200 requests per hour.
     |  
     |  get_widely_shared_artifacts_published_to_web(self)
     |      Returns a list of artifacts shared through published to web.
     |      ### Returns
     |      ----
     |      Dict:
     |          Returns artifacts published to web.
     |      ### Limitations
     |      ----
     |      Maximum 200 requests per hour.
     |  
     |  post_workspace_info(self, workspaces, lineage=True, datasourceDetails=True, datasetSchema=True, datasetExpressions=True, getArtifactUsers=True)
     |      Initiates a call to receive metadata for the requested list of workspaces. This is a preview API call.
     |      *** THIS REQUEST IS IN PREVIEW IN SIMPLEPBI ***
     |      ### Parameters
     |      ----
     |      ### Request Body
     |      ----        
     |      workspaces: str[]
     |          List of the workspace IDs to ask for scan (it can't contain more than 100 workspaces)
     |      ### Returns
     |      ----
     |      Scan id in uuid format. 202 OK
     |  
     |  restore_deleted_group(self, workspace_id, emailAddress, name=None)
     |      Restores a deleted workspace.
     |      This API call only supports restoring workspaces in the new workspace experience.
     |      ### Parameters
     |      ----
     |      workspace_id:
     |          The Power Bi workspace id. You can take it from PBI Service URL
     |      ### Request Body
     |      ----
     |      groupUserAccessRight: GroupUserAccessRight
     |          Access rights user has for the workspace (Permission level: Admin, Contributor, Member, Viewer or None). This is mandatory
     |      emailAddress: str
     |          Email address of the user. This is mandatory.
     |      name: str
     |          The name of the group to be restored.
     |      ### Returns
     |      ----
     |      Response object from requests library. 200 OK
     |  
     |  rotate_encryption_key_preview(self, tenantKeyId, keyVaultKeyIdentifier)
     |      Adds an encryption key for Power BI workspaces assigned to a capacity.
     |      *** THIS REQUEST IS IN PREVIEW IN SIMPLEPBI ***
     |      ### Parameters
     |      ----
     |      tenantKeyId: str uuid
     |          The tenant key ID
     |      ### Request Body
     |      ----        
     |      keyVaultKeyIdentifier: str
     |          The URI that uniquely specifies an encryption key in Azure Key Vault.
     |      ### Returns
     |      ----
     |      Response object from requests library. 200 OK
     |  
     |  unassign_workspaces_from_capacity_preview(self, workspacesToAssign)
     |      Unassigns the specified workspaces from capacity.
     |      *** THIS REQUEST IS IN PREVIEW IN SIMPLEPBI ***
     |      ### Parameters
     |      ----
     |      ### Request Body
     |      ----        
     |      workspacesToAssign: str[]
     |          List of the workspace IDs to be migrated to premium capacity
     |      ### Returns
     |      ----
     |      Response object from requests library. 200 OK
     |  
     |  update_group_preview(self, workspace_id, capacityId=None, dashboards=None, dataflowStorageId=None, dataflows=None, datasets=None, description=None, isOnDedicatedCapacity=None, isReadOnly=None, name=None, pipelineId=None, reports=None, state=None, typee=None, users=None, workbooks=None)
     |      Updates the properties of the specified workspace.
     |      *** THIS REQUEST IS IN PREVIEW IN SIMPLEPBI ***
     |      This API call call only updates workspaces in the new workspace experience. Only the name and description can be updated. The name must be unique inside an organization.
     |      ### Parameters
     |      ----
     |      workspace_id:
     |          The Power Bi workspace id. You can take it from PBI Service URL
     |      ### Request Body
     |      ----
     |      id: string
     |          The workspace ID
     |      capacityId: string
     |          The capacity ID
     |      dashboards: str[]
     |          List of the dashboards ids that belong to the group. Available only for admin API calls.
     |      dataflowStorageId: string
     |          The Power BI dataflow storage account ID
     |      dataflows: str[]
     |          List of the dataflows ids that belong to the group. Available only for admin API calls.
     |      datasets: str[]
     |          List of the datasets ids that belong to the group. Available only for admin API calls.
     |      description: string
     |          The group description. Available only for admin API calls.
     |      isOnDedicatedCapacity: bool
     |          Is the group on dedicated capacity
     |      isReadOnly: bool
     |          Is the group read only
     |      name: string
     |          The group name
     |      pipelineId: string
     |          The deployment pipeline ID that the workspace is assigned to. Available only for workspaces in the new workspace experience and only for admin API calls.
     |      reports: str[]
     |          List of the reports ids that belong to the group. Available only for admin API calls.
     |      state: string
     |          The group state. Available only for admin API calls.
     |      typee: string
     |          The type of group. Available only for admin API calls.
     |      users: GroupUser[]
     |          List of the users that belong to the group, and their access rights. This value will be empty. It will be removed from the payload response in an upcoming release. To retrieve user information on an artifact, please consider using the Get Group User APIs, or the PostWorkspaceInfo API with the getArtifactUser parameter.
     |      workbooks: str[]
     |          List of the workbooks ids that belong to the group. Available only for admin API calls.
     |      ### Returns
     |      ----
     |      Response object from requests library. 200 OK
     |  
     |  update_user_in_pipeline(self, pipeline_id, identifier, principalType, accessRight)
     |      Grants user permissions to a specified deployment pipeline.
     |      
     |      ### Parameters
     |      ----
     |      pipeline_id:
     |          The Power Bi Deployment Pipeline id. You can take it from PBI Service URL
     |      ### Request Body
     |      ----
     |      identifier: str
     |          For Principal type 'User' provide UPN , otherwise provide Object ID of the principal. This is mandatory
     |      principalType: principalType
     |          The principal type (App, Group, User or None). This is mandatory.
     |      accessRight: GroupUserAccessRight
     |          accessRequired - Access rights a user has for the deployment pipeline. (Permission level: Admin). This is mandatory
     |      ### Returns
     |      ----
     |      Response object from requests library. 200 OK
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)

FILE
    c:\users\ibarrau\documents\github\simplepbi\simplepbi\admin\__init__.py

